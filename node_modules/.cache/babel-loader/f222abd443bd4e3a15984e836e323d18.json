{"ast":null,"code":"import Swiper from 'swiper';\nimport { isObject, extend } from './utils.js';\nimport { paramsList } from './params-list.js';\nfunction getParams() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var splitEvents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var params = {\n    on: {}\n  };\n  var events = {};\n  var passedParams = {};\n  extend(params, Swiper.defaults);\n  extend(params, Swiper.extendedDefaults);\n  params._emitClasses = true;\n  params.init = false;\n  var rest = {};\n  var allowedParams = paramsList.map(function (key) {\n    return key.replace(/_/, '');\n  });\n  var plainObj = Object.assign({}, obj);\n  Object.keys(plainObj).forEach(function (key) {\n    if (typeof obj[key] === 'undefined') return;\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      if (splitEvents) {\n        events[\"\".concat(key[2].toLowerCase()).concat(key.substr(3))] = obj[key];\n      } else {\n        params.on[\"\".concat(key[2].toLowerCase()).concat(key.substr(3))] = obj[key];\n      }\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  ['navigation', 'pagination', 'scrollbar'].forEach(function (key) {\n    if (params[key] === true) params[key] = {};\n    if (params[key] === false) delete params[key];\n  });\n  return {\n    params: params,\n    passedParams: passedParams,\n    rest: rest,\n    events: events\n  };\n}\nexport { getParams };","map":null,"metadata":{},"sourceType":"module"}