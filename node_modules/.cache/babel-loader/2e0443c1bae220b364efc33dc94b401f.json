{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Saba\\\\Desktop\\\\mentallandreact-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination(_ref) {\n  var swiper = _ref.swiper,\n    extendParams = _ref.extendParams,\n    on = _ref.on,\n    emit = _ref.emit;\n  var pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: function formatFractionCurrent(number) {\n        return number;\n      },\n      formatFractionTotal: function formatFractionTotal(number) {\n        return number;\n      },\n      bulletClass: \"\".concat(pfx, \"-bullet\"),\n      bulletActiveClass: \"\".concat(pfx, \"-bullet-active\"),\n      modifierClass: \"\".concat(pfx, \"-\"),\n      currentClass: \"\".concat(pfx, \"-current\"),\n      totalClass: \"\".concat(pfx, \"-total\"),\n      hiddenClass: \"\".concat(pfx, \"-hidden\"),\n      progressbarFillClass: \"\".concat(pfx, \"-progressbar-fill\"),\n      progressbarOppositeClass: \"\".concat(pfx, \"-progressbar-opposite\"),\n      clickableClass: \"\".concat(pfx, \"-clickable\"),\n      lockClass: \"\".concat(pfx, \"-lock\"),\n      horizontalClass: \"\".concat(pfx, \"-horizontal\"),\n      verticalClass: \"\".concat(pfx, \"-vertical\"),\n      paginationDisabledClass: \"\".concat(pfx, \"-disabled\")\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  var bulletSize;\n  var dynamicBulletIndex = 0;\n  var makeElementsArray = function makeElementsArray(el) {\n    if (!Array.isArray(el)) el = [el].filter(function (e) {\n      return !!e;\n    });\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    var bulletActiveClass = swiper.params.pagination.bulletActiveClass;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[\"\".concat(position === 'prev' ? 'previous' : 'next', \"ElementSibling\")];\n    if (bulletEl) {\n      bulletEl.classList.add(\"\".concat(bulletActiveClass, \"-\").concat(position));\n      bulletEl = bulletEl[\"\".concat(position === 'prev' ? 'previous' : 'next', \"ElementSibling\")];\n      if (bulletEl) {\n        bulletEl.classList.add(\"\".concat(bulletActiveClass, \"-\").concat(position, \"-\").concat(position));\n      }\n    }\n  }\n  function onBulletClick(e) {\n    var bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    var index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      var newSlideIndex = swiper.getSlideIndexByData(index);\n      var currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    var rtl = swiper.rtl;\n    var params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    var el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    var current;\n    var previousIndex;\n    var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    var total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      var bullets = swiper.pagination.bullets;\n      var firstIndex;\n      var lastIndex;\n      var midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(function (subEl) {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = \"\".concat(bulletSize * (params.dynamicMainBullets + 4), \"px\");\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(function (bulletEl) {\n        var _bulletEl$classList;\n        var classesToRemove = _toConsumableArray(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(function (suffix) {\n          return \"\".concat(params.bulletActiveClass).concat(suffix);\n        })).map(function (s) {\n          return typeof s === 'string' && s.includes(' ') ? s.split(' ') : s;\n        }).flat();\n        (_bulletEl$classList = bulletEl.classList).remove.apply(_bulletEl$classList, _toConsumableArray(classesToRemove));\n      });\n      if (el.length > 1) {\n        bullets.forEach(function (bullet) {\n          var bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            var _bullet$classList;\n            (_bullet$classList = bullet.classList).add.apply(_bullet$classList, _toConsumableArray(params.bulletActiveClass.split(' ')));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              var _bullet$classList2;\n              (_bullet$classList2 = bullet.classList).add.apply(_bullet$classList2, _toConsumableArray(\"\".concat(params.bulletActiveClass, \"-main\").split(' ')));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        var bullet = bullets[current];\n        if (bullet) {\n          var _bullet$classList3;\n          (_bullet$classList3 = bullet.classList).add.apply(_bullet$classList3, _toConsumableArray(params.bulletActiveClass.split(' ')));\n        }\n        if (params.dynamicBullets) {\n          var firstDisplayedBullet = bullets[firstIndex];\n          var lastDisplayedBullet = bullets[lastIndex];\n          for (var i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              var _bullets$i$classList;\n              (_bullets$i$classList = bullets[i].classList).add.apply(_bullets$i$classList, _toConsumableArray(\"\".concat(params.bulletActiveClass, \"-main\").split(' ')));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        var bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        var offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(function (bullet) {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = \"\".concat(bulletsOffset, \"px\");\n        });\n      }\n    }\n    el.forEach(function (subEl, subElIndex) {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(function (fractionEl) {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(function (totalEl) {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(function (progressEl) {\n          progressEl.style.transform = \"translate3d(0,0,0) scaleX(\".concat(scaleX, \") scaleY(\").concat(scaleY, \")\");\n          progressEl.style.transitionDuration = \"\".concat(swiper.params.speed, \"ms\");\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    var params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    var el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    var paginationHTML = '';\n    if (params.type === 'bullets') {\n      var numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (var i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += \"<\".concat(params.bulletElement, \" class=\\\"\").concat(params.bulletClass, \"\\\"></\").concat(params.bulletElement, \">\");\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = \"<span class=\\\"\".concat(params.currentClass, \"\\\"></span>\") + ' / ' + \"<span class=\\\"\".concat(params.totalClass, \"\\\"></span>\");\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = \"<span class=\\\"\".concat(params.progressbarFillClass, \"\\\"></span>\");\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(function (subEl) {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        var _swiper$pagination$bu;\n        (_swiper$pagination$bu = swiper.pagination.bullets).push.apply(_swiper$pagination$bu, _toConsumableArray(subEl.querySelectorAll(classesToSelector(params.bulletClass))));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    var params = swiper.params.pagination;\n    if (!params.el) return;\n    var el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = _toConsumableArray(document.querySelectorAll(params.el));\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = _toConsumableArray(swiper.el.querySelectorAll(params.el));\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(function (subEl) {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el: el\n    });\n    el = makeElementsArray(el);\n    el.forEach(function (subEl) {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(\"\".concat(params.modifierClass).concat(params.type, \"-dynamic\"));\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    var params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    var el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(function (subEl) {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(function (subEl) {\n      var _subEl$classList;\n      return (_subEl$classList = subEl.classList).remove.apply(_subEl$classList, _toConsumableArray(params.bulletActiveClass.split(' ')));\n    });\n  }\n  on('changeDirection', function () {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    var params = swiper.params.pagination;\n    var el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    el.forEach(function (subEl) {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', function () {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', function () {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', function () {\n    update();\n  });\n  on('snapGridLengthChange', function () {\n    render();\n    update();\n  });\n  on('destroy', function () {\n    destroy();\n  });\n  on('enable disable', function () {\n    var el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(function (subEl) {\n        return subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass);\n      });\n    }\n  });\n  on('lock unlock', function () {\n    update();\n  });\n  on('click', function (_s, e) {\n    var targetEl = e.target;\n    var el = swiper.pagination.el;\n    if (!Array.isArray(el)) el = [el].filter(function (element) {\n      return !!element;\n    });\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      var isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(function (subEl) {\n        return subEl.classList.toggle(swiper.params.pagination.hiddenClass);\n      });\n    }\n  });\n  var enable = function enable() {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    var el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(function (subEl) {\n        return subEl.classList.remove(swiper.params.pagination.paginationDisabledClass);\n      });\n    }\n    init();\n    render();\n    update();\n  };\n  var disable = function disable() {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    var el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(function (subEl) {\n        return subEl.classList.add(swiper.params.pagination.paginationDisabledClass);\n      });\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable: enable,\n    disable: disable,\n    render: render,\n    update: update,\n    init: init,\n    destroy: destroy\n  });\n}","map":null,"metadata":{},"sourceType":"module"}