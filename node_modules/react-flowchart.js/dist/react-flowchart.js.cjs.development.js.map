{"version":3,"file":"react-flowchart.js.cjs.development.js","sources":["../src/constants.ts","../src/utils.ts","../src/Flowchart.tsx"],"sourcesContent":["export const CANVAS_ID = 'flowchartjs-canvas';\nexport const ONCLICK_HANDLER_NAME = 'onClickHandler';\nexport const NAME_FOR_MISSING_CONNECTION = 'none_missing_connection';\n","import { Connection, Node } from './types';\nimport { ONCLICK_HANDLER_NAME, NAME_FOR_MISSING_CONNECTION } from './constants';\n\nexport const outputNodes = (nodes: Node[]): string => {\n  const output = nodes.map(node => {\n    const link = ':$' + ONCLICK_HANDLER_NAME;\n    const flowstate = node.state ? `|${node.state}` : '';\n    return `${node.id}=>${node.type}: ${node.label}${flowstate}${link}`;\n  });\n\n  return output.join('\\n');\n};\n\nconst writeConnection = (\n  id: string,\n  connection?: Connection | null,\n  key?: string\n): string => {\n  if (!connection) {\n    return '';\n  }\n  const prefix = key ? `${key}, ` : '';\n  return `${id}(${prefix}${connection.position})->${connection.id}`;\n};\n\nexport const outputConnections = (nodes: Node[]): string => {\n  const output = nodes\n    .flatMap(node => {\n      switch (node.type) {\n        case 'start':\n        case 'end':\n        case 'operation':\n        case 'inputoutput':\n        case 'subroutine':\n          return writeConnection(node.id, node.connection);\n        case 'condition': {\n          const yes = writeConnection(node.id, node.connections.yes, 'yes');\n          const no = writeConnection(node.id, node.connections.no, 'no');\n          return [yes, no];\n        }\n        case 'parallel': {\n          const path1 = writeConnection(\n            node.id,\n            node.connections.path1,\n            'path1'\n          );\n          const path2 = writeConnection(\n            node.id,\n            node.connections.path2,\n            'path2'\n          );\n          const path3 = writeConnection(\n            node.id,\n            node.connections.path3,\n            'path3'\n          );\n          return [path1, path2, path3];\n        }\n        default:\n          return '';\n      }\n    })\n    .filter(text => text !== '');\n\n  if (output.length <= 0 && nodes.length > 0) {\n    output.push(\n      writeConnection(nodes[0].id, {\n        id: NAME_FOR_MISSING_CONNECTION,\n        position: 'bottom',\n      })\n    );\n  }\n\n  return output.join('\\n');\n};\n","import flowchart from 'flowchart.js';\nimport React, { useEffect } from 'react';\nimport { FlowchartProps } from './types';\nimport { outputNodes, outputConnections } from './utils';\nimport { CANVAS_ID, ONCLICK_HANDLER_NAME } from './constants';\n\nlet chartElement: any = null;\n\nexport const Flowchart = (props: FlowchartProps) => {\n  const { nodes, config, styles, states, onClick } = props;\n\n  const internalClickHandler = (mouseEvent: MouseEvent, item: any) => {\n    if (onClick) {\n      onClick(item, mouseEvent);\n    }\n  };\n  (window as any)[ONCLICK_HANDLER_NAME] = internalClickHandler;\n\n  useEffect(() => {\n    if (nodes.length <= 0) {\n      return;\n    }\n\n    if (chartElement && chartElement.clean) {\n      chartElement.clean();\n    }\n\n    const nodesCode = outputNodes(nodes);\n    const connectionsCode = outputConnections(nodes);\n\n    chartElement = flowchart.parse(`\n      ${nodesCode}\n      ${connectionsCode}\n    `);\n\n    chartElement.drawSVG(CANVAS_ID, {\n      'line-width': config?.lineWidth || 2,\n      'line-length': config?.lineLength || 50,\n      'text-margin': config?.textMargin || 10,\n      'font-size': config?.fontSize || 14,\n      'font-family': config?.fontFamily || 'Helvetica',\n      'font-weight': config?.fontWeight || 'normal',\n      'font-color': config?.fontColor || 'black',\n      'line-color': config?.lineColor || 'black',\n      'element-color': config?.elementColor || 'black',\n      fill: config?.fill || 'white',\n      'yes-text': config?.yesText || 'yes',\n      'no-text': config?.noText || 'no',\n      'arrow-end': config?.arrowEnd || 'classic-wide-long',\n      scale: config?.scale || 1,\n      // nodes style\n      symbols: styles,\n      // flowstate styles\n      flowstate: states,\n    });\n  }, [nodes, config, styles, states]);\n\n  return <div id={CANVAS_ID}></div>;\n};\n"],"names":["CANVAS_ID","ONCLICK_HANDLER_NAME","NAME_FOR_MISSING_CONNECTION","outputNodes","nodes","output","map","node","link","flowstate","state","id","type","label","join","writeConnection","connection","key","prefix","position","outputConnections","flatMap","yes","connections","no","path1","path2","path3","filter","text","length","push","chartElement","Flowchart","props","config","styles","states","onClick","internalClickHandler","mouseEvent","item","window","useEffect","clean","nodesCode","connectionsCode","flowchart","parse","drawSVG","lineWidth","lineLength","textMargin","fontSize","fontFamily","fontWeight","fontColor","lineColor","elementColor","fill","yesText","noText","arrowEnd","scale","symbols","React"],"mappings":"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"}