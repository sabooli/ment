{"version":3,"file":"react-flowchart.js.cjs.production.min.js","sources":["../src/utils.ts","../src/Flowchart.tsx","../src/constants.ts"],"sourcesContent":["import { Connection, Node } from './types';\nimport { ONCLICK_HANDLER_NAME, NAME_FOR_MISSING_CONNECTION } from './constants';\n\nexport const outputNodes = (nodes: Node[]): string => {\n  const output = nodes.map(node => {\n    const link = ':$' + ONCLICK_HANDLER_NAME;\n    const flowstate = node.state ? `|${node.state}` : '';\n    return `${node.id}=>${node.type}: ${node.label}${flowstate}${link}`;\n  });\n\n  return output.join('\\n');\n};\n\nconst writeConnection = (\n  id: string,\n  connection?: Connection | null,\n  key?: string\n): string => {\n  if (!connection) {\n    return '';\n  }\n  const prefix = key ? `${key}, ` : '';\n  return `${id}(${prefix}${connection.position})->${connection.id}`;\n};\n\nexport const outputConnections = (nodes: Node[]): string => {\n  const output = nodes\n    .flatMap(node => {\n      switch (node.type) {\n        case 'start':\n        case 'end':\n        case 'operation':\n        case 'inputoutput':\n        case 'subroutine':\n          return writeConnection(node.id, node.connection);\n        case 'condition': {\n          const yes = writeConnection(node.id, node.connections.yes, 'yes');\n          const no = writeConnection(node.id, node.connections.no, 'no');\n          return [yes, no];\n        }\n        case 'parallel': {\n          const path1 = writeConnection(\n            node.id,\n            node.connections.path1,\n            'path1'\n          );\n          const path2 = writeConnection(\n            node.id,\n            node.connections.path2,\n            'path2'\n          );\n          const path3 = writeConnection(\n            node.id,\n            node.connections.path3,\n            'path3'\n          );\n          return [path1, path2, path3];\n        }\n        default:\n          return '';\n      }\n    })\n    .filter(text => text !== '');\n\n  if (output.length <= 0 && nodes.length > 0) {\n    output.push(\n      writeConnection(nodes[0].id, {\n        id: NAME_FOR_MISSING_CONNECTION,\n        position: 'bottom',\n      })\n    );\n  }\n\n  return output.join('\\n');\n};\n","import flowchart from 'flowchart.js';\nimport React, { useEffect } from 'react';\nimport { FlowchartProps } from './types';\nimport { outputNodes, outputConnections } from './utils';\nimport { CANVAS_ID, ONCLICK_HANDLER_NAME } from './constants';\n\nlet chartElement: any = null;\n\nexport const Flowchart = (props: FlowchartProps) => {\n  const { nodes, config, styles, states, onClick } = props;\n\n  const internalClickHandler = (mouseEvent: MouseEvent, item: any) => {\n    if (onClick) {\n      onClick(item, mouseEvent);\n    }\n  };\n  (window as any)[ONCLICK_HANDLER_NAME] = internalClickHandler;\n\n  useEffect(() => {\n    if (nodes.length <= 0) {\n      return;\n    }\n\n    if (chartElement && chartElement.clean) {\n      chartElement.clean();\n    }\n\n    const nodesCode = outputNodes(nodes);\n    const connectionsCode = outputConnections(nodes);\n\n    chartElement = flowchart.parse(`\n      ${nodesCode}\n      ${connectionsCode}\n    `);\n\n    chartElement.drawSVG(CANVAS_ID, {\n      'line-width': config?.lineWidth || 2,\n      'line-length': config?.lineLength || 50,\n      'text-margin': config?.textMargin || 10,\n      'font-size': config?.fontSize || 14,\n      'font-family': config?.fontFamily || 'Helvetica',\n      'font-weight': config?.fontWeight || 'normal',\n      'font-color': config?.fontColor || 'black',\n      'line-color': config?.lineColor || 'black',\n      'element-color': config?.elementColor || 'black',\n      fill: config?.fill || 'white',\n      'yes-text': config?.yesText || 'yes',\n      'no-text': config?.noText || 'no',\n      'arrow-end': config?.arrowEnd || 'classic-wide-long',\n      scale: config?.scale || 1,\n      // nodes style\n      symbols: styles,\n      // flowstate styles\n      flowstate: states,\n    });\n  }, [nodes, config, styles, states]);\n\n  return <div id={CANVAS_ID}></div>;\n};\n","export const CANVAS_ID = 'flowchartjs-canvas';\nexport const ONCLICK_HANDLER_NAME = 'onClickHandler';\nexport const NAME_FOR_MISSING_CONNECTION = 'none_missing_connection';\n"],"names":["writeConnection","id","connection","key","position","chartElement","props","nodes","config","styles","states","onClick","window","mouseEvent","item","useEffect","length","clean","nodesCode","map","node","type","label","state","join","outputNodes","connectionsCode","output","flatMap","connections","yes","no","path1","path2","path3","filter","text","push","outputConnections","flowchart","parse","drawSVG","lineWidth","lineLength","textMargin","fontSize","fontFamily","fontWeight","fontColor","lineColor","elementColor","fill","yesText","noText","arrowEnd","scale","symbols","flowstate","React"],"mappings":"qMAaMA,EAAkB,SACtBC,EACAC,EACAC,UAEKD,EAIKD,OADKE,EAASA,OAAU,IACTD,EAAWE,eAAcF,EAAWD,GAHpD,ICbPI,EAAoB,uBAEC,SAACC,OAChBC,EAA2CD,EAA3CC,MAAOC,EAAoCF,EAApCE,OAAQC,EAA4BH,EAA5BG,OAAQC,EAAoBJ,EAApBI,OAAQC,EAAYL,EAAZK,eAOtCC,OAAc,eALc,SAACC,EAAwBC,GAChDH,GACFA,EAAQG,EAAMD,IAKlBE,aAAU,gBACJR,EAAMS,QAAU,IAIhBX,GAAgBA,EAAaY,OAC/BZ,EAAaY,YAGTC,EDxBiB,SAACX,UACXA,EAAMY,KAAI,SAAAC,UAGbA,EAAKnB,QAAOmB,EAAKC,UAASD,EAAKE,OADvBF,EAAKG,UAAYH,EAAKG,MAAU,IADrC,sBAKDC,KAAK,MCiBCC,CAAYlB,GACxBmB,EDHuB,SAACnB,OAC1BoB,EAASpB,EACZqB,SAAQ,SAAAR,UACCA,EAAKC,UACN,YACA,UACA,gBACA,kBACA,oBACIrB,EAAgBoB,EAAKnB,GAAImB,EAAKlB,gBAClC,kBAGI,CAFKF,EAAgBoB,EAAKnB,GAAImB,EAAKS,YAAYC,IAAK,OAChD9B,EAAgBoB,EAAKnB,GAAImB,EAAKS,YAAYE,GAAI,WAGtD,iBAgBI,CAfO/B,EACZoB,EAAKnB,GACLmB,EAAKS,YAAYG,MACjB,SAEYhC,EACZoB,EAAKnB,GACLmB,EAAKS,YAAYI,MACjB,SAEYjC,EACZoB,EAAKnB,GACLmB,EAAKS,YAAYK,MACjB,wBAKK,OAGZC,QAAO,SAAAC,SAAiB,KAATA,YAEdT,EAAOX,QAAU,GAAKT,EAAMS,OAAS,GACvCW,EAAOU,KACLrC,EAAgBO,EAAM,GAAGN,GAAI,CAC3BA,GEjEmC,0BFkEnCG,SAAU,YAKTuB,EAAOH,KAAK,MC7COc,CAAkB/B,IAE1CF,EAAekC,EAAUC,iBACrBtB,aACAQ,aAGSe,QCnCQ,qBDmCW,eAChBjC,MAAAA,SAAAA,EAAQkC,YAAa,iBACpBlC,MAAAA,SAAAA,EAAQmC,aAAc,kBACtBnC,MAAAA,SAAAA,EAAQoC,aAAc,gBACxBpC,MAAAA,SAAAA,EAAQqC,WAAY,kBAClBrC,MAAAA,SAAAA,EAAQsC,aAAc,2BACtBtC,MAAAA,SAAAA,EAAQuC,aAAc,uBACvBvC,MAAAA,SAAAA,EAAQwC,YAAa,sBACrBxC,MAAAA,SAAAA,EAAQyC,YAAa,yBAClBzC,MAAAA,SAAAA,EAAQ0C,eAAgB,QACzCC,MAAM3C,MAAAA,SAAAA,EAAQ2C,OAAQ,oBACV3C,MAAAA,SAAAA,EAAQ4C,UAAW,iBACpB5C,MAAAA,SAAAA,EAAQ6C,SAAU,kBAChB7C,MAAAA,SAAAA,EAAQ8C,WAAY,oBACjCC,OAAO/C,MAAAA,SAAAA,EAAQ+C,QAAS,EAExBC,QAAS/C,EAETgD,UAAW/C,OAEZ,CAACH,EAAOC,EAAQC,EAAQC,IAEpBgD,uBAAKzD,GCzDW"}